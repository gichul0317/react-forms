{"ast":null,"code":"var _jsxFileName = \"/Users/gichul/Desktop/react-forms/src/components/SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport useInput from '../hooks/use-input';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const {\n    input: enteredInput,\n    isValid: enteredInputIsValid,\n    hasError: inputHasError,\n    inputHandling: inputHandler,\n    inputBlurHandling: inputBlurHandler,\n    reset: resetInput\n  } = useInput(value => value.trim() !== '');\n  const {\n    value: enteredEmail,\n    isValid: enteredEmailIsValid,\n    hasError: emailInputHasError,\n    inputHandling: emailHandler,\n    inputBlurHandling: emailBlurHandler,\n    reset: resetEmailInput\n  } = useInput(value => value.includes('@'));\n  let formIsValid = false;\n\n  if (enteredInputIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n\n  const submitHandling = e => {\n    e.preventDefault();\n\n    if (!enteredInputIsValid) {\n      return;\n    }\n\n    console.log(enteredInput, enteredEmail);\n    resetInput();\n    resetEmailInput();\n  };\n\n  const InputClasses = inputHasError ? 'form-control invalid' : 'form-control';\n  const emailClasses = emailInputHasError ? 'form-control invalid' : 'form-control';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandling,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: InputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: inputHandler,\n        value: enteredInput,\n        onBlur: inputBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), inputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"name must not be empty.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Your Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        onChange: emailHandler,\n        value: enteredEmail,\n        onBlur: emailBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), emailInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"email must not be empty.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"ChoPsPJ0q3QVQYu9RF+Iq/mhsNY=\", false, function () {\n  return [useInput, useInput];\n});\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useInput","SimpleInput","props","input","enteredInput","isValid","enteredInputIsValid","hasError","inputHasError","inputHandling","inputHandler","inputBlurHandling","inputBlurHandler","reset","resetInput","value","trim","enteredEmail","enteredEmailIsValid","emailInputHasError","emailHandler","emailBlurHandler","resetEmailInput","includes","formIsValid","submitHandling","e","preventDefault","console","log","InputClasses","emailClasses"],"sources":["/Users/gichul/Desktop/react-forms/src/components/SimpleInput.js"],"sourcesContent":["import useInput from '../hooks/use-input';\n\nconst SimpleInput = (props) => {\n  const {\n    input: enteredInput,\n    isValid: enteredInputIsValid,\n    hasError: inputHasError,\n    inputHandling: inputHandler,\n    inputBlurHandling: inputBlurHandler,\n    reset: resetInput,\n  } = useInput((value) => value.trim() !== '');\n\n  const {\n    value: enteredEmail,\n    isValid: enteredEmailIsValid,\n    hasError: emailInputHasError,\n    inputHandling: emailHandler,\n    inputBlurHandling: emailBlurHandler,\n    reset: resetEmailInput,\n  } = useInput((value) => value.includes('@'));\n\n  let formIsValid = false;\n\n  if (enteredInputIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n\n  const submitHandling = (e) => {\n    e.preventDefault();\n\n    if (!enteredInputIsValid) {\n      return;\n    }\n    console.log(enteredInput, enteredEmail);\n    resetInput();\n    resetEmailInput();\n  };\n\n  const InputClasses = inputHasError ? 'form-control invalid' : 'form-control';\n  const emailClasses = emailInputHasError\n    ? 'form-control invalid'\n    : 'form-control';\n\n  return (\n    <form onSubmit={submitHandling}>\n      <div className={InputClasses}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          onChange={inputHandler}\n          value={enteredInput}\n          onBlur={inputBlurHandler}\n        />\n        {inputHasError && <p className=\"error-text\">name must not be empty.</p>}\n      </div>\n      <div className={emailClasses}>\n        <label htmlFor=\"email\">Your Email</label>\n        <input\n          type=\"email\"\n          id=\"email\"\n          onChange={emailHandler}\n          value={enteredEmail}\n          onBlur={emailBlurHandler}\n        />\n        {emailInputHasError && (\n          <p className=\"error-text\">email must not be empty.</p>\n        )}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":";;;AAAA,OAAOA,QAAP,MAAqB,oBAArB;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;EAAA;;EAC7B,MAAM;IACJC,KAAK,EAAEC,YADH;IAEJC,OAAO,EAAEC,mBAFL;IAGJC,QAAQ,EAAEC,aAHN;IAIJC,aAAa,EAAEC,YAJX;IAKJC,iBAAiB,EAAEC,gBALf;IAMJC,KAAK,EAAEC;EANH,IAOFd,QAAQ,CAAEe,KAAD,IAAWA,KAAK,CAACC,IAAN,OAAiB,EAA7B,CAPZ;EASA,MAAM;IACJD,KAAK,EAAEE,YADH;IAEJZ,OAAO,EAAEa,mBAFL;IAGJX,QAAQ,EAAEY,kBAHN;IAIJV,aAAa,EAAEW,YAJX;IAKJT,iBAAiB,EAAEU,gBALf;IAMJR,KAAK,EAAES;EANH,IAOFtB,QAAQ,CAAEe,KAAD,IAAWA,KAAK,CAACQ,QAAN,CAAe,GAAf,CAAZ,CAPZ;EASA,IAAIC,WAAW,GAAG,KAAlB;;EAEA,IAAIlB,mBAAmB,IAAIY,mBAA3B,EAAgD;IAC9CM,WAAW,GAAG,IAAd;EACD;;EAED,MAAMC,cAAc,GAAIC,CAAD,IAAO;IAC5BA,CAAC,CAACC,cAAF;;IAEA,IAAI,CAACrB,mBAAL,EAA0B;MACxB;IACD;;IACDsB,OAAO,CAACC,GAAR,CAAYzB,YAAZ,EAA0Ba,YAA1B;IACAH,UAAU;IACVQ,eAAe;EAChB,CATD;;EAWA,MAAMQ,YAAY,GAAGtB,aAAa,GAAG,sBAAH,GAA4B,cAA9D;EACA,MAAMuB,YAAY,GAAGZ,kBAAkB,GACnC,sBADmC,GAEnC,cAFJ;EAIA,oBACE;IAAM,QAAQ,EAAEM,cAAhB;IAAA,wBACE;MAAK,SAAS,EAAEK,YAAhB;MAAA,wBACE;QAAO,OAAO,EAAC,MAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QACE,IAAI,EAAC,MADP;QAEE,EAAE,EAAC,MAFL;QAGE,QAAQ,EAAEpB,YAHZ;QAIE,KAAK,EAAEN,YAJT;QAKE,MAAM,EAAEQ;MALV;QAAA;QAAA;QAAA;MAAA,QAFF,EASGJ,aAAa,iBAAI;QAAG,SAAS,EAAC,YAAb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QATpB;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAYE;MAAK,SAAS,EAAEuB,YAAhB;MAAA,wBACE;QAAO,OAAO,EAAC,OAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QACE,IAAI,EAAC,OADP;QAEE,EAAE,EAAC,OAFL;QAGE,QAAQ,EAAEX,YAHZ;QAIE,KAAK,EAAEH,YAJT;QAKE,MAAM,EAAEI;MALV;QAAA;QAAA;QAAA;MAAA,QAFF,EASGF,kBAAkB,iBACjB;QAAG,SAAS,EAAC,YAAb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAVJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAZF,eAyBE;MAAK,SAAS,EAAC,cAAf;MAAA,uBACE;QAAQ,QAAQ,EAAE,CAACK,WAAnB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAzBF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AA+BD,CAxED;;GAAMvB,W;UAQAD,Q,EASAA,Q;;;KAjBAC,W;AA0EN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}