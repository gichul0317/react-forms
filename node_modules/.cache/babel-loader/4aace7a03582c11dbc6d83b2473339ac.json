{"ast":null,"code":"var _jsxFileName = \"/Users/gichul/Desktop/react-forms/src/components/SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport useInput from '../hooks/use-input';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const {\n    input: enteredInput,\n    isValid: enteredInputIsValid,\n    hasError: inputHasError,\n    inputHandling: inputHandler,\n    inputBlurHandling: inputBlurHandler\n  } = useInput(value => value.trim() !== '');\n  const [email, setEmail] = useState('');\n  const [emailTouched, setEmailTouched] = useState(false);\n  const enteredEmailValid = email.includes('@');\n  const emailInvalid = !enteredEmailValid && emailTouched;\n  let formIsValid = false;\n\n  if (enteredInputIsValid && enteredEmailValid) {\n    formIsValid = true;\n  }\n\n  const emailHandling = e => {\n    setEmail(e.target.value);\n  };\n\n  const inputBlurHandling = e => {\n    setTouched(true);\n  };\n\n  const emailBlurHandling = e => {\n    setEmailTouched(true);\n  };\n\n  const submitHandling = e => {\n    e.preventDefault();\n    setTouched(true);\n\n    if (!enteredNameValid) {\n      return;\n    }\n\n    console.log(name);\n    setName('');\n    setEmail('');\n    setTouched(false);\n    setEmailTouched(false);\n  };\n\n  const InputClasses = isInvalid ? 'form-control invalid' : 'form-control';\n  const emailClasses = emailInvalid ? 'form-control invalid' : 'form-control';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandling,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: InputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: inputHandling,\n        value: name,\n        onBlur: inputBlurHandling\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), isInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"name must not be empty.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Your Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        onChange: emailHandling,\n        value: email,\n        onBlur: emailBlurHandling\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), emailInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"email must not be empty.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"Fsj/RomIcLBe02jo3gPV1CfBYoM=\", false, function () {\n  return [useInput];\n});\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useState","useInput","SimpleInput","props","input","enteredInput","isValid","enteredInputIsValid","hasError","inputHasError","inputHandling","inputHandler","inputBlurHandling","inputBlurHandler","value","trim","email","setEmail","emailTouched","setEmailTouched","enteredEmailValid","includes","emailInvalid","formIsValid","emailHandling","e","target","setTouched","emailBlurHandling","submitHandling","preventDefault","enteredNameValid","console","log","name","setName","InputClasses","isInvalid","emailClasses"],"sources":["/Users/gichul/Desktop/react-forms/src/components/SimpleInput.js"],"sourcesContent":["import { useState } from 'react';\nimport useInput from '../hooks/use-input';\n\nconst SimpleInput = (props) => {\n  const {\n    input: enteredInput,\n    isValid: enteredInputIsValid,\n    hasError: inputHasError,\n    inputHandling: inputHandler,\n    inputBlurHandling: inputBlurHandler,\n  } = useInput((value) => value.trim() !== '');\n\n  const [email, setEmail] = useState('');\n  const [emailTouched, setEmailTouched] = useState(false);\n\n  const enteredEmailValid = email.includes('@');\n  const emailInvalid = !enteredEmailValid && emailTouched;\n\n  let formIsValid = false;\n\n  if (enteredInputIsValid && enteredEmailValid) {\n    formIsValid = true;\n  }\n\n  const emailHandling = (e) => {\n    setEmail(e.target.value);\n  };\n\n  const inputBlurHandling = (e) => {\n    setTouched(true);\n  };\n\n  const emailBlurHandling = (e) => {\n    setEmailTouched(true);\n  };\n\n  const submitHandling = (e) => {\n    e.preventDefault();\n\n    setTouched(true);\n\n    if (!enteredNameValid) {\n      return;\n    }\n    console.log(name);\n    setName('');\n    setEmail('');\n    setTouched(false);\n    setEmailTouched(false);\n  };\n\n  const InputClasses = isInvalid ? 'form-control invalid' : 'form-control';\n  const emailClasses = emailInvalid ? 'form-control invalid' : 'form-control';\n\n  return (\n    <form onSubmit={submitHandling}>\n      <div className={InputClasses}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          onChange={inputHandling}\n          value={name}\n          onBlur={inputBlurHandling}\n        />\n        {isInvalid && <p className=\"error-text\">name must not be empty.</p>}\n      </div>\n      <div className={emailClasses}>\n        <label htmlFor=\"email\">Your Email</label>\n        <input\n          type=\"email\"\n          id=\"email\"\n          onChange={emailHandling}\n          value={email}\n          onBlur={emailBlurHandling}\n        />\n        {emailInvalid && <p className=\"error-text\">email must not be empty.</p>}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}