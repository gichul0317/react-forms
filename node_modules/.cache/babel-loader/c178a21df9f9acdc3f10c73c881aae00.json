{"ast":null,"code":"var _jsxFileName = \"/Users/gichul/Desktop/react-forms/src/components/SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport useInput from '../hooks/use-input';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const {\n    input: enteredInput,\n    isValid: enteredInputIsValid,\n    hasError: inputHasError,\n    inputHandling: inputHandler,\n    inputBlurHandling: inputBlurHandler,\n    reset: resetInput\n  } = useInput(value => value.trim() !== '');\n  const {\n    value: enteredEmail,\n    isValid: enteredEmailIsValid,\n    hasError: emailInputHasError,\n    inputHandling: emailHandler,\n    inputBlurHandling: emailBlurHandler,\n    reset: resetEmailInput\n  } = useInput(value => value.includes('@'));\n  const [email, setEmail] = useState('');\n  const [emailTouched, setEmailTouched] = useState(false);\n  const enteredEmailValid = email.includes('@');\n  const emailInvalid = !enteredEmailValid && emailTouched;\n  let formIsValid = false;\n\n  if (enteredInputIsValid && enteredEmailValid) {\n    formIsValid = true;\n  }\n\n  const emailHandling = e => {\n    setEmail(e.target.value);\n  };\n\n  const emailBlurHandling = e => {\n    setEmailTouched(true);\n  };\n\n  const submitHandling = e => {\n    e.preventDefault();\n\n    if (!inputHasError) {\n      return;\n    }\n\n    console.log(enteredInput);\n    resetInput();\n    setEmail('');\n    setEmailTouched(false);\n  };\n\n  const InputClasses = inputHasError ? 'form-control invalid' : 'form-control';\n  const emailClasses = emailInvalid ? 'form-control invalid' : 'form-control';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandling,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: InputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: inputHandler,\n        value: enteredInput,\n        onBlur: inputBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), inputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"name must not be empty.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Your Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        onChange: emailHandling,\n        value: email,\n        onBlur: emailBlurHandling\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), emailInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"email must not be empty.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"fepc6TD/5604ZWmLihAAIYCiStQ=\", false, function () {\n  return [useInput, useInput];\n});\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useState","useInput","SimpleInput","props","input","enteredInput","isValid","enteredInputIsValid","hasError","inputHasError","inputHandling","inputHandler","inputBlurHandling","inputBlurHandler","reset","resetInput","value","trim","enteredEmail","enteredEmailIsValid","emailInputHasError","emailHandler","emailBlurHandler","resetEmailInput","includes","email","setEmail","emailTouched","setEmailTouched","enteredEmailValid","emailInvalid","formIsValid","emailHandling","e","target","emailBlurHandling","submitHandling","preventDefault","console","log","InputClasses","emailClasses"],"sources":["/Users/gichul/Desktop/react-forms/src/components/SimpleInput.js"],"sourcesContent":["import { useState } from 'react';\nimport useInput from '../hooks/use-input';\n\nconst SimpleInput = (props) => {\n  const {\n    input: enteredInput,\n    isValid: enteredInputIsValid,\n    hasError: inputHasError,\n    inputHandling: inputHandler,\n    inputBlurHandling: inputBlurHandler,\n    reset: resetInput,\n  } = useInput((value) => value.trim() !== '');\n\n  const {\n    value: enteredEmail,\n    isValid: enteredEmailIsValid,\n    hasError: emailInputHasError,\n    inputHandling: emailHandler,\n    inputBlurHandling: emailBlurHandler,\n    reset: resetEmailInput,\n  } = useInput((value) => value.includes('@'));\n\n  const [email, setEmail] = useState('');\n  const [emailTouched, setEmailTouched] = useState(false);\n\n  const enteredEmailValid = email.includes('@');\n  const emailInvalid = !enteredEmailValid && emailTouched;\n\n  let formIsValid = false;\n\n  if (enteredInputIsValid && enteredEmailValid) {\n    formIsValid = true;\n  }\n\n  const emailHandling = (e) => {\n    setEmail(e.target.value);\n  };\n\n  const emailBlurHandling = (e) => {\n    setEmailTouched(true);\n  };\n\n  const submitHandling = (e) => {\n    e.preventDefault();\n\n    if (!inputHasError) {\n      return;\n    }\n    console.log(enteredInput);\n    resetInput();\n    setEmail('');\n    setEmailTouched(false);\n  };\n\n  const InputClasses = inputHasError ? 'form-control invalid' : 'form-control';\n  const emailClasses = emailInvalid ? 'form-control invalid' : 'form-control';\n\n  return (\n    <form onSubmit={submitHandling}>\n      <div className={InputClasses}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          onChange={inputHandler}\n          value={enteredInput}\n          onBlur={inputBlurHandler}\n        />\n        {inputHasError && <p className=\"error-text\">name must not be empty.</p>}\n      </div>\n      <div className={emailClasses}>\n        <label htmlFor=\"email\">Your Email</label>\n        <input\n          type=\"email\"\n          id=\"email\"\n          onChange={emailHandling}\n          value={email}\n          onBlur={emailBlurHandling}\n        />\n        {emailInvalid && <p className=\"error-text\">email must not be empty.</p>}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}