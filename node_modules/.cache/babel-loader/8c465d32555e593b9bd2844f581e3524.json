{"ast":null,"code":"var _jsxFileName = \"/Users/gichul/Desktop/react-forms/src/components/SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [touched, setTouched] = useState(false);\n  const enteredNameValid = name.trim() !== '';\n  const enteredEmailValid = email.trim() !== '';\n  const isInvalid = (!enteredNameValid || !enteredEmailValid) && touched;\n  let formIsValid = false;\n\n  if (enteredNameValid && enteredEmailValid) {\n    formIsValid = true;\n  }\n\n  const inputHandling = e => {\n    setName(e.target.value);\n  };\n\n  const emailHandling = e => {\n    setEmail(e.target.value);\n  };\n\n  const inputBlurHandling = e => {\n    setTouched(true);\n  };\n\n  const submitHandling = e => {\n    e.preventDefault();\n    setTouched(true);\n\n    if (!enteredNameValid) {\n      return;\n    }\n\n    console.log(name);\n    setName('');\n    setEmail('');\n    setTouched(false);\n  };\n\n  const InputClasses = isInvalid ? 'form-control invalid' : 'form-control';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandling,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: InputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: inputHandling,\n        value: name,\n        onBlur: inputBlurHandling\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), isInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"name must not be empty.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: InputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Your Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        onChange: emailHandling,\n        value: email,\n        onBlur: inputBlurHandling\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), isInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"email must not be empty.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"nMkmW9OKieYPOglcY9xyy+KLw6U=\");\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useState","SimpleInput","props","name","setName","email","setEmail","touched","setTouched","enteredNameValid","trim","enteredEmailValid","isInvalid","formIsValid","inputHandling","e","target","value","emailHandling","inputBlurHandling","submitHandling","preventDefault","console","log","InputClasses"],"sources":["/Users/gichul/Desktop/react-forms/src/components/SimpleInput.js"],"sourcesContent":["import { useState } from 'react';\n\nconst SimpleInput = (props) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [touched, setTouched] = useState(false);\n\n  const enteredNameValid = name.trim() !== '';\n  const enteredEmailValid = email.trim() !== '';\n  const isInvalid = (!enteredNameValid || !enteredEmailValid) && touched;\n\n  let formIsValid = false;\n\n  if (enteredNameValid && enteredEmailValid) {\n    formIsValid = true;\n  }\n\n  const inputHandling = (e) => {\n    setName(e.target.value);\n  };\n\n  const emailHandling = (e) => {\n    setEmail(e.target.value);\n  };\n\n  const inputBlurHandling = (e) => {\n    setTouched(true);\n  };\n\n  const submitHandling = (e) => {\n    e.preventDefault();\n\n    setTouched(true);\n\n    if (!enteredNameValid) {\n      return;\n    }\n    console.log(name);\n    setName('');\n    setEmail('');\n    setTouched(false);\n  };\n\n  const InputClasses = isInvalid ? 'form-control invalid' : 'form-control';\n\n  return (\n    <form onSubmit={submitHandling}>\n      <div className={InputClasses}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          onChange={inputHandling}\n          value={name}\n          onBlur={inputBlurHandling}\n        />\n        {isInvalid && <p className=\"error-text\">name must not be empty.</p>}\n      </div>\n      <div className={InputClasses}>\n        <label htmlFor=\"email\">Your Email</label>\n        <input\n          type=\"email\"\n          id=\"email\"\n          onChange={emailHandling}\n          value={email}\n          onBlur={inputBlurHandling}\n        />\n        {isInvalid && <p className=\"error-text\">email must not be empty.</p>}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;EAAA;;EAC7B,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,EAAD,CAAhC;EACA,MAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,KAAD,CAAtC;EAEA,MAAMS,gBAAgB,GAAGN,IAAI,CAACO,IAAL,OAAgB,EAAzC;EACA,MAAMC,iBAAiB,GAAGN,KAAK,CAACK,IAAN,OAAiB,EAA3C;EACA,MAAME,SAAS,GAAG,CAAC,CAACH,gBAAD,IAAqB,CAACE,iBAAvB,KAA6CJ,OAA/D;EAEA,IAAIM,WAAW,GAAG,KAAlB;;EAEA,IAAIJ,gBAAgB,IAAIE,iBAAxB,EAA2C;IACzCE,WAAW,GAAG,IAAd;EACD;;EAED,MAAMC,aAAa,GAAIC,CAAD,IAAO;IAC3BX,OAAO,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;EACD,CAFD;;EAIA,MAAMC,aAAa,GAAIH,CAAD,IAAO;IAC3BT,QAAQ,CAACS,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;EACD,CAFD;;EAIA,MAAME,iBAAiB,GAAIJ,CAAD,IAAO;IAC/BP,UAAU,CAAC,IAAD,CAAV;EACD,CAFD;;EAIA,MAAMY,cAAc,GAAIL,CAAD,IAAO;IAC5BA,CAAC,CAACM,cAAF;IAEAb,UAAU,CAAC,IAAD,CAAV;;IAEA,IAAI,CAACC,gBAAL,EAAuB;MACrB;IACD;;IACDa,OAAO,CAACC,GAAR,CAAYpB,IAAZ;IACAC,OAAO,CAAC,EAAD,CAAP;IACAE,QAAQ,CAAC,EAAD,CAAR;IACAE,UAAU,CAAC,KAAD,CAAV;EACD,CAZD;;EAcA,MAAMgB,YAAY,GAAGZ,SAAS,GAAG,sBAAH,GAA4B,cAA1D;EAEA,oBACE;IAAM,QAAQ,EAAEQ,cAAhB;IAAA,wBACE;MAAK,SAAS,EAAEI,YAAhB;MAAA,wBACE;QAAO,OAAO,EAAC,MAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QACE,IAAI,EAAC,MADP;QAEE,EAAE,EAAC,MAFL;QAGE,QAAQ,EAAEV,aAHZ;QAIE,KAAK,EAAEX,IAJT;QAKE,MAAM,EAAEgB;MALV;QAAA;QAAA;QAAA;MAAA,QAFF,EASGP,SAAS,iBAAI;QAAG,SAAS,EAAC,YAAb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAThB;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAYE;MAAK,SAAS,EAAEY,YAAhB;MAAA,wBACE;QAAO,OAAO,EAAC,OAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QACE,IAAI,EAAC,OADP;QAEE,EAAE,EAAC,OAFL;QAGE,QAAQ,EAAEN,aAHZ;QAIE,KAAK,EAAEb,KAJT;QAKE,MAAM,EAAEc;MALV;QAAA;QAAA;QAAA;MAAA,QAFF,EASGP,SAAS,iBAAI;QAAG,SAAS,EAAC,YAAb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAThB;IAAA;MAAA;MAAA;MAAA;IAAA,QAZF,eAuBE;MAAK,SAAS,EAAC,cAAf;MAAA,uBACE;QAAQ,QAAQ,EAAE,CAACC,WAAnB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAvBF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AA6BD,CAxED;;GAAMZ,W;;KAAAA,W;AA0EN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}