{"ast":null,"code":"var _jsxFileName = \"/Users/gichul/Desktop/react-forms/src/components/SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const [name, setName] = useState('');\n  const [touched, setTouched] = useState(false);\n  const [formIsValid, setFormIsValid] = useState(false);\n  const enteredNameValid = name.trim() !== '';\n  const isInvalid = !enteredNameValid && touched;\n\n  const inputHandling = e => {\n    setName(e.target.value);\n  };\n\n  const inputBlurHandling = e => {\n    setTouched(true);\n  };\n\n  const submitHandling = e => {\n    e.preventDefault();\n    setTouched(true);\n\n    if (!enteredNameValid) {\n      return;\n    }\n\n    console.log(name);\n    setName('');\n    setTouched(false);\n  };\n\n  const nameInputClasses = isInvalid ? 'form-control invalid' : 'form-control';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandling,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: inputHandling,\n        value: name,\n        onBlur: inputBlurHandling\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), isInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"input must not be empty.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"ECa5TZhljWkz1ov2FDp0vF++JW0=\");\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useState","SimpleInput","props","name","setName","touched","setTouched","formIsValid","setFormIsValid","enteredNameValid","trim","isInvalid","inputHandling","e","target","value","inputBlurHandling","submitHandling","preventDefault","console","log","nameInputClasses"],"sources":["/Users/gichul/Desktop/react-forms/src/components/SimpleInput.js"],"sourcesContent":["import { useState } from 'react';\n\nconst SimpleInput = (props) => {\n  const [name, setName] = useState('');\n  const [touched, setTouched] = useState(false);\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  const enteredNameValid = name.trim() !== '';\n  const isInvalid = !enteredNameValid && touched;\n\n  const inputHandling = (e) => {\n    setName(e.target.value);\n  };\n\n  const inputBlurHandling = (e) => {\n    setTouched(true);\n  };\n\n  const submitHandling = (e) => {\n    e.preventDefault();\n\n    setTouched(true);\n\n    if (!enteredNameValid) {\n      return;\n    }\n    console.log(name);\n    setName('');\n    setTouched(false);\n  };\n\n  const nameInputClasses = isInvalid ? 'form-control invalid' : 'form-control';\n\n  return (\n    <form onSubmit={submitHandling}>\n      <div className={nameInputClasses}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          onChange={inputHandling}\n          value={name}\n          onBlur={inputBlurHandling}\n        />\n        {isInvalid && <p className=\"error-text\">input must not be empty.</p>}\n      </div>\n      <div className=\"form-actions\">\n        <button>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;EAAA;;EAC7B,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,EAAD,CAAhC;EACA,MAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,KAAD,CAAtC;EACA,MAAM,CAACO,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,KAAD,CAA9C;EAEA,MAAMS,gBAAgB,GAAGN,IAAI,CAACO,IAAL,OAAgB,EAAzC;EACA,MAAMC,SAAS,GAAG,CAACF,gBAAD,IAAqBJ,OAAvC;;EAEA,MAAMO,aAAa,GAAIC,CAAD,IAAO;IAC3BT,OAAO,CAACS,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;EACD,CAFD;;EAIA,MAAMC,iBAAiB,GAAIH,CAAD,IAAO;IAC/BP,UAAU,CAAC,IAAD,CAAV;EACD,CAFD;;EAIA,MAAMW,cAAc,GAAIJ,CAAD,IAAO;IAC5BA,CAAC,CAACK,cAAF;IAEAZ,UAAU,CAAC,IAAD,CAAV;;IAEA,IAAI,CAACG,gBAAL,EAAuB;MACrB;IACD;;IACDU,OAAO,CAACC,GAAR,CAAYjB,IAAZ;IACAC,OAAO,CAAC,EAAD,CAAP;IACAE,UAAU,CAAC,KAAD,CAAV;EACD,CAXD;;EAaA,MAAMe,gBAAgB,GAAGV,SAAS,GAAG,sBAAH,GAA4B,cAA9D;EAEA,oBACE;IAAM,QAAQ,EAAEM,cAAhB;IAAA,wBACE;MAAK,SAAS,EAAEI,gBAAhB;MAAA,wBACE;QAAO,OAAO,EAAC,MAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QACE,IAAI,EAAC,MADP;QAEE,EAAE,EAAC,MAFL;QAGE,QAAQ,EAAET,aAHZ;QAIE,KAAK,EAAET,IAJT;QAKE,MAAM,EAAEa;MALV;QAAA;QAAA;QAAA;MAAA,QAFF,EASGL,SAAS,iBAAI;QAAG,SAAS,EAAC,YAAb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAThB;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAYE;MAAK,SAAS,EAAC,cAAf;MAAA,uBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAZF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAkBD,CAjDD;;GAAMV,W;;KAAAA,W;AAmDN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}